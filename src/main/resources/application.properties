spring.application.name=JJ Studio

###########################
##### Mongo DB Config #####
###########################
spring.data.mongodb.uri=mongodb://root:root@jjstudio_mongo:27017/jjstudio?authSource=admin
spring.data.mongodb.database=jjstudio
org.springframework.data.mongodb=DEBUG

######################
##### Log Levels #####
######################
#logging.level.root=DEBUG
logging.level.com.jjstudio.controller=DEBUG
logging.level.com.jjstudio.filter=DEBUG

################################
##### Notes for Swagger UI #####
##### Order:               #####
#####  (1) Authorized APIs #####
#####  (2) Anonymous APIs  #####
################################
# User Controller
UserController.createUser.notes=Create a new user
UserController.getUser.notes=Get information for a user
UserController.updateUser.notes=Update a user's information
UserController.deleteUser.notes=Permanently delete a user
UserController.getCurrentUser.notes=Get information for current user
UserController.updateCurrentUser.notes=Update current user's information
UserController.deleteCurrentUser.notes=Permanently delete current user

# My Sound Controller
MySoundController.createSound.notes=Upload and save a sound using a multipart request for current user. Maximum file size supported is 15MB
MySoundController.getSoundById.notes=Get a sound by sound ID for current user
MySoundController.getAllSounds.notes=Get all sounds for current user
MySoundController.deleteSoundById.notes=Delete a sound by sound ID for current user

# My Track Controller
MyTrackController.createTrack.notes=Upload and save a track for current user
MyTrackController.getTrackById.notes=Get a track by track ID for current user
MyTrackController.getAllTracks.notes=Get all tracks for current user
MyTrackController.deleteTrackById.notes=Delete a track by track ID for current user

# My Keyboard Controller
MyKeyboardController.createKeyboard.notes=Create and save a custom keyboard configuration for current user
MyKeyboardController.getKeyboardById.notes=Get a keyboard by keyboard ID for current user
MyKeyboardController.getAllKeyboards.notes=Get all keyboards for current user
MyKeyboardController.deleteKeyboardById.notes=Delete a keyboard by keyboard ID for current user

# Sound Controller
SoundController.getSoundById.notes=Get a sound by sound ID
SoundController.getAllSounds.notes=Get all sounds

# Keyboard Controller
KeyboardController.getDefaultKeyboard.notes=Get the default keyboard

# Auth Controller
AuthController.authenticateUser.notes=Create and return JWT to client given username/password
AuthController.invalidateToken.notes=Invalidate the JWT of current user
